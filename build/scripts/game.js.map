{
  "version": 3,
  "sources": [
    "node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "src/Constants.js",
    "src/ConstantsHeroPosition.js",
    "src/index.js",
    "src/objects/Character.js",
    "src/objects/CodeUI.js",
    "src/objects/InformationString.js",
    "src/platformerUtils.js",
    "src/states/ComputerScreen.js",
    "src/states/ComputerScreenVhs.js",
    "src/states/EndView.js",
    "src/states/LeftView.js",
    "src/states/MainMenu.js",
    "src/states/MainView.js",
    "src/states/RightView.js",
    "src/states/TypeRecordScreen.js",
    "src/states/VhsView.js"
  ],
  "names": [],
  "mappings": "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",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "export const StringDialog = {\n  onComputer: \"Press enter to use the computer\",\n  typeRecordDialog: \"Press enter to leave\",\n  useTypeRecorder: \"Use type recorder\",\n  typePassword:\"Enter the password : \",\n  vhsPicked: \"You picked the vhs cassette\"\n};\n\nexport const Width = 500;\nexport const Height = 500;\nexport const WidthSpriteSheetHero = 36;\nexport const HeightSpriteSheetHero = 64;\n\nexport const TextPosition = {\n  x: 100,\n  y: 20,\n  x0: 0,\n  y0: 400,\n  x1:200,\n  y1: 100\n};\n\nexport const FloorY = TextPosition.y0 + 17;\n\nexport const TypeRecorderPosition = {\n  x: 1400,\n  y: FloorY\n}\n\nexport const ComputerPosition = {\n  x: 600,\n  y: FloorY\n}\n\nexport const DoorPosition = {\n  x: 1537,\n  y: FloorY - 64/2 - 1\n}\n\nexport const VhsPosition = {\n  x: 1530,\n  y: 238\n}\n\nexport const DoorTextOffset = 200;\nexport const VhsTextOffset = 200;\n\nexport const offsetTypeRecorderImg = 10;\nexport const HeightTypeRecorder = (52 - offsetTypeRecorderImg) / 2;\nexport const HeightComputer = 63 / 2;\n\nexport const Code = \"9356\";\nexport const StyleRef = { font: \"bold 8px Arial\", fill: \"#000\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };\nexport const Style = { font: \"bold 15px Arial\", fill: \"#fff\", boundsAlignH: \"center\", boundsAlignV: \"middle\" };",
    "import { FloorY } from \"./Constants.js\";\n\nexport const OnRightOfLayer = {\n  x: 1550,\n  y: FloorY - 32\n}\n\nexport const OnRightOfLayerVhsView = {\n  x: 1535,\n  y: FloorY - 32*7\n}\n\nexport const OnLeftOfLayer = {\n  x: 10,\n  y: FloorY - 32\n}\n\n\nexport const PositionAfterComputer = {\n  x: 600,\n  y: FloorY - 32\n};\n\nexport const TypeRecorderPositionAfter = {\n  x: 1400,\n  y: FloorY - 32\n}",
    "import MainView from 'states/MainView';\nimport MainMenu from 'states/MainMenu';\nimport ComputerScreen from 'states/ComputerScreen';\nimport TypeRecordScreen from 'states/TypeRecordScreen';\nimport LeftView from 'states/LeftView';\nimport RightView from 'states/RightView';\nimport VhsView from 'states/VhsView';\nimport ComputerScreenVhs from 'states/ComputerScreenVhs';\nimport EndView from 'states/EndView';\nimport { Width, Height } from  \"./Constants.js\"\n\nclass Game extends Phaser.Game {\n\n  constructor() {\n    super(Width, Height, Phaser.AUTO, 'content', null);\n    this.state.add('MainMenu', MainMenu, false);\n    this.state.add('MainView', MainView, false);\n    this.state.add('ComputerScreen', ComputerScreen, false);\n    this.state.add('TypeRecordScreen', TypeRecordScreen, false);\n    this.state.add('LeftView', LeftView, false);\n    this.state.add('RightView', RightView, false);\n    this.state.add('VhsView', VhsView, false);\n    this.state.add('ComputerScreenVhs', ComputerScreenVhs, false);\n    this.state.add('EndView', EndView, false);\n    this.state.start('MainMenu');\n    this.hasVHS = false;\n    this.doorOpened = false;\n    this.sawEnd = false;\n\n  }\n\n  goToScreenMode() {\n    this.state.start('ComputerScreen');\n  }\n\n  goToMainGame(params = null) {\n    this.state.start('MainView', Phaser.Plugin.StateTransition.Out.SlideLeft, Phaser.Plugin.StateTransition.Out.SlideLeft, true, true, params);\n  }\n\n  goToSecondLevel(params = null) {\n    this.state.start('LeftView', Phaser.Plugin.StateTransition.Out.SlideRight, Phaser.Plugin.StateTransition.Out.SlideRight, true, true, params);\n  }\n\n  goToThirdLevel(params = null) {\n    this.state.start('RightView', Phaser.Plugin.StateTransition.Out.SlideLeft, Phaser.Plugin.StateTransition.Out.SlideLeft, true, true, params);\n  }\n\n  goToTypeRecordScreen() {\n    this.state.start('TypeRecordScreen');\n  }\n\n  goToVHSScreen() {\n    this.state.start('ComputerScreenVhs');\n  }\n\n  goToFourthScreen(params = null) {\n    this.state.start('VhsView', Phaser.Plugin.StateTransition.Out.SlideLeft, Phaser.Plugin.StateTransition.Out.SlideLeft, true, true, params);\n  }\n\n  goToEndGameScreen() {\n    this.state.start('EndView');\n  }\n\n\n}\n\nnew Game();\n",
    "const LimitY = 550;\nconst TimeLapse = 10;\nclass Character extends Phaser.Sprite {\n\n  constructor(game, x, y, key, frame) {\n    super(game, x, y, key, frame);\n    //Enable physics on the player\n    game.physics.arcade.enable(this);\n    this.body.bounce.x = this.body.bounce.y = 0;\n    this.cursor = game.input.keyboard.createCursorKeys();\n    this.locked = false;\n    const fn = () => {this.body.gravity.y = 500;};\n    setTimeout(fn, 500);\n    this.isClimbing = false;\n    const leftArray = [28, 27, 26, 25, 24, 23, 22, 21];\n    const rightArray = [1, 2, 3, 4, 5, 6, 7, 8];\n    const JumpArray = [9, 10, 11, 12, 14];\n    const ladderArray = [30, 31, 32, 33, 34, 35];\n\n    this.animations.add('jump', JumpArray, TimeLapse, true);\n    this.animations.add('left', leftArray, TimeLapse, true);\n    this.animations.add('right', rightArray, TimeLapse, true);\n    this.animations.add('climb', ladderArray, TimeLapse, true);\n    this.animations.add('climb-down', ladderArray.reverse(), TimeLapse, true);\n    this.direction = 1;\n  }\n\n  update() {\n    if(this.locked) {\n      this.body.velocity.x = 0;\n      return;\n    }\n\n    if (this.cursor.left.isDown) {\n        this.body.velocity.x = -200;\n        this.animations.play(\"left\", TimeLapse);\n        this.direction = -1;\n    }\n    else if (this.cursor.right.isDown) {\n        this.body.velocity.x = 200;\n        this.animations.play(\"right\", TimeLapse);\n        this.direction = 1;\n    } else {\n      this.body.velocity.x = 0;\n    }\n\n    // Make the player jump if he is touching the ground\n    if (this.cursor.up.isDown && this.body.onFloor()) {\n      this.body.velocity.y = -270;\n      this.animations.play(\"jump\", TimeLapse);\n    }\n\n    if(this.isClimbing) {\n      if(this.cursor.up.isDown) {\n        this.body.velocity.y = -150;\n        this.animations.play('climb', TimeLapse);\n      }\n      else if(this.cursor.down.isDown) {\n        this.body.velocity.y = 150;\n        this.animations.play('climb-down', TimeLapse);\n      } else {\n        this.body.velocity.y = 0;\n      }\n    }\n\n    if(this.body.velocity.x == 0 && this.body.velocity.y == 0){\n      this.animations.stop();\n      this.frame = this.direction ===  1 ? 0 : 29;\n    }\n  }\n\n  isDeath() {\n    if (!this.body) {\n      return false;\n    }\n    return this.body.position.y > LimitY;\n  }\n\n  climbLadder() {\n    this.body.gravity.y = 0;\n    this.isClimbing = true;\n  }\n\n  leaveLadder() {\n    this.body.gravity.y = 500;\n    this.isClimbing = false;\n  }\n\n  lock() {\n    this.locked = true;\n  }\n\n  unlock() {\n    this.locked = false;\n  }\n}\n\nexport default Character;",
    "import { StringDialog, TextPosition , Style, Code } from '../Constants.js';\nclass CodeUI extends Phaser.Text {\n\n  constructor(game, x, callBackFn) {\n    super(game, x, TextPosition.y, \"\", Style);\n    game.input.keyboard.addCallbacks(this, null, null, this.keyPress);\n    this.setShadow(1, 1, 'rgba(0,0,0,0.7)', 1);\n    this.setTextBounds(TextPosition.x0, TextPosition.y0, TextPosition.x1, TextPosition.y1);\n    this.hide = true;\n    this.callBack = callBackFn\n  }\n\n  keyPress(char) {\n    if(this.hide) {\n      return;\n    }\n\n    if(char >= '0' && char <= '9') {\n      this.text += char;\n    }\n    if(this.text === Code) {\n      this.callBack();\n      this.hideText();\n      this.text = \"\";\n      return;\n    }\n    if(this.text.length >= Code.length) {\n      this.invalid();\n    }\n  }\n\n  hideText() {\n    this.hide = true;\n  }\n  showText() {\n    this.hide = false;\n  }\n\n  invalid() {\n    this.text = \"Invalid\";\n    const fn = () => {this.text = \"\"};\n    setTimeout(fn, 2000);\n  }\n\n}\n\nexport default CodeUI;",
    "import { StringDialog, TextPosition , Style } from '../Constants.js';\n\nconst Timer = 500;\n\nclass InformationString extends Phaser.Text {\n\n  constructor(game, x, text, timer = Timer) {\n    super(game, x, TextPosition.y, text, Style);\n    game.input.keyboard.addCallbacks(this, null, null, this.keyPress);\n    this.setShadow(1, 1, 'rgba(0,0,0,0.7)', 1);\n    this.setTextBounds(TextPosition.x0, TextPosition.y0, TextPosition.x1, TextPosition.y1);\n    this.visible = false;\n    this.timer = timer;\n  }\n\n  blink() {\n    const fn = () => {this.visible  = false};\n    setTimeout(fn, this.timer);\n    this.visible = true;\n  }\n\n}\n\nexport default InformationString;",
    "export function loadColissionMap(map) {\n  map.setCollisionBetween(771, 786);\n  map.setCollisionBetween(691,700);\n  map.setCollisionBetween(579,583);\n  map.setCollisionBetween(456,470);\n  map.setCollisionBetween(211,220);\n  map.setCollision([146,147,181,182]);\n  map.setCollision([299,300,301,334,335,336,369,370,371]);\n}\n\nexport function collideLadder(game, hero, ladder) {\n    const isCollide = game.physics.arcade.overlap(hero, ladder, hero.climbLadder, null, hero);\n    if(!isCollide && hero.isClimbing == true) {\n      hero.leaveLadder();\n    }\n}",
    "import { PositionAfterComputer } from '../ConstantsHeroPosition.js';\n\nconst content = [\n    \"\",\n    \"Sometimes\",\n    \"New technology fastly become considered as\",\n    \"an Ancient technology\",\n    \"\",\n    \"Should we know how to use them in the\",\n    \"future\",\n    \"\",\n    \"Press Enter to leave the computer\"\n];\n\nconst frament = [\n\"uniform sampler2D tex0;\",\n\"uniform sampler2D tex1;\",\n\"\",\n\"void main()\",\n\"{\",\n\"    vec4 t0 = texture2D(tex0, gl_TexCoord[0].st);\",\n\"    vec4 t1 = texture2D(tex1, gl_TexCoord[0].st);\",\n\"    gl_FragColor = mix(t0, t1, t1.a);\",\n\"}\"\n];\n\nclass ComputerScreen extends Phaser.State {\n\n  constructor() {\n    super();\n    this.finish = false;\n  }\n\n  preload() {\n    this.game.load.image(\"frame\", \"res/screen-frame.png\");\n    this.game.load.image(\"stand\", \"res/stand.png\");\n  }\n\n  create() {\n    this.line = [];\n\n    this.wordIndex = 0;\n    this.lineIndex = 0;\n\n    this.wordDelay = 100;\n    this.lineDelay = 300;\n\n    this.text = this.game.add.text(80, 70, '', { font: \"15px Arial\", fill: \"#19de65\" });\n    this.nextLine();\n\n    this.game.add.sprite(51, 400, 'stand');\n    this.game.add.sprite(0,0, \"frame\");\n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n\n  }\n\n  nextLine() {\n    if (this.lineIndex === content.length)\n    {\n      this.finish = true;\n      return;\n    }\n    this.line = content[this.lineIndex].split(' ');\n    this.wordIndex = 0;\n    this.game.time.events.repeat(this.wordDelay, this.line.length, this.nextWord, this);\n    this.lineIndex++;\n  }\n\n  nextWord() {\n    this.text.text = this.text.text.concat(this.line[this.wordIndex] + \" \");\n    this.wordIndex++;\n    if (this.wordIndex === this.line.length)\n    {\n      this.text.text = this.text.text.concat(\"\\n\");\n      this.game.time.events.add(this.lineDelay, this.nextLine, this);\n    }\n  }\n\n  update() {\n    if(this.enterButton.isDown && this.finish) {\n      this.game.goToMainGame({x: PositionAfterComputer.x, y: PositionAfterComputer.y});\n    }\n  }\n\n}\n\nexport default ComputerScreen;\n",
    "import { PositionAfterComputer } from '../ConstantsHeroPosition.js';\n\nconst OffsetX = 180;\nconst OffsetY = 310;\nconst MaxFrame = 18;\n\nclass ComputerScreenVhs extends Phaser.State {\n\n  constructor() {\n    super();\n  }\n\n  preload() {\n    this.game.load.image(\"frame\", \"res/screen-frame.png\");\n    this.game.load.image(\"stand\", \"res/stand.png\");\n    this.game.load.spritesheet('buttonPlay', 'res/buttonPlay.png', 33, 33);\n    this.game.load.spritesheet('buttonStop', 'res/buttonStop.png', 33, 33);\n    this.game.load.spritesheet('buttonRestart', 'res/buttonRestart.png', 33, 33);\n    this.game.load.spritesheet('buttonImageByImge', 'res/buttonImageByImage.png', 33, 33);\n    this.game.load.spritesheet('videos', \"res/videos.png\", 372, 292);\n  }\n\n  create() {\n    this.screen = this.game.add.sprite(64,50, 'videos', 0);\n    this.anim = this.screen.animations.add('playVideo');\n    this.game.add.sprite(51, 400, 'stand');\n    this.game.add.sprite(0,-2, \"frame\");\n    this.game.sawEnd = true;\n    const buttonPlay = this.game.add.button(OffsetX, OffsetY, 'buttonPlay', this.play, this, 2, 1, 0);\n    const buttonImageByImge = this.game.add.button(OffsetX + 40, OffsetY, 'buttonImageByImge', this.imageByImage, this, 2, 1, 0);\n    const buttonRestart = this.game.add.button(OffsetX + 80, OffsetY, 'buttonRestart', this.restart, this, 2, 1, 0);\n    const buttonStop = this.game.add.button(OffsetX + 120, OffsetY, 'buttonStop', this.rewind, this, 2, 1, 0);\n\n    this.escapeButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ESC);\n  }\n\n  update() {\n    if(this.escapeButton.isDown) {\n      this.game.goToMainGame({ x:PositionAfterComputer.x, y:PositionAfterComputer.y });\n    }\n  }\n\n  play() {\n    this.anim.play('playVideo', MaxFrame, false);\n  }\n  restart() {\n    this.screen.frame = 0;\n  }\n\n  imageByImage() {\n    const currentFrame = this.screen.frame;\n    const newFrame = currentFrame + 1 < MaxFrame ? currentFrame + 1 : 0;\n    this.screen.frame = newFrame;\n  }\n\n  stop() {\n    this.screen.frame = 0;\n  }\n\n}\n\nexport default ComputerScreenVhs;\n",
    "class EndView extends Phaser.State {\n\n  create() {\n    this.game.add.text(120, 200, \"Thanks for playing  again ! :)\", { font: \"bold 21px Arial\", fill: \"#fff\" })\n    this.game.add.text(40, 280, \"I hope it was as much fun to play as to develop it!\", { font: \"bold 18px Arial\", fill: \"#fff\" });\n  }\n\n  preload() {\n  }\n\n  update() {\n  }\n\n}\n\nexport default EndView;\n",
    "import { TextPosition, StringDialog, FloorY, TypeRecorderPosition, HeightTypeRecorder, WidthSpriteSheetHero, HeightSpriteSheetHero } from '../Constants.js';\nimport { OnRightOfLayer, OnLeftOfLayer } from '../ConstantsHeroPosition.js';\nimport Character from 'objects/Character';\nimport InformationString from 'objects/InformationString.js';\nimport { loadColissionMap } from \"../platformerUtils.js\";\n\nclass LeftView extends Phaser.State {\n\n constructor() {\n    super();\n    this.originalPosition = { x:0, y:0 };\n  }\n\n  init(params = null) {\n    if(params) {\n      this.originalPosition.x = params.x;\n      this.originalPosition.y = params.y;\n    } else {\n      this.originalPosition = Object.assign( {}, OnRightOfLayer);\n    }\n  }\n\n  create() {\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // Add the physics engine to all game objects\n    this.game.world.enableBody = true;\n\n    this.map = this.game.add.tilemap('Map2');\n    this.map.addTilesetImage('myTileset', 'Tileset');\n    loadColissionMap(this.map);\n\n    this.layer = this.map.createLayer('Tile Layer 1');\n    this.layer.resizeWorld();\n\n    this.typeRecorder = this.game.add.sprite(TypeRecorderPosition.x, TypeRecorderPosition.y - HeightTypeRecorder, \"typeRecorder\");\n\n    this.hero = new Character(this.game, this.originalPosition.x , this.originalPosition.y, \"test\", 0);\n    this.game.add.existing(this.hero);\n    this.game.camera.follow(this.hero);\n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n\n    this.text = new InformationString(this.game, TypeRecorderPosition.x, StringDialog.useTypeRecorder);\n    this.game.add.existing(this.text);\n\n    this.game.time.advancedTiming = true;\n  }\n\n\n  update() {\n    if(this.hero.x + this.hero.width > this.game.world.width) {\n      this.game.goToMainGame(OnLeftOfLayer);\n    }\n    if(this.hero.x < 0) {\n      this.game.goToEndGameScreen();\n    }\n    this.game.physics.arcade.collide(this.hero, this.layer);\n    this.game.physics.arcade.overlap(this.hero, this.typeRecorder, this.displayTextTypeRecorder, null, this);\n  }\n\n  preload() {\n    this.game.load.spritesheet(\"test\", \"res/hero.png\",WidthSpriteSheetHero, HeightSpriteSheetHero);\n    this.game.load.image('Tileset', \"res/tileset.png\");\n    this.game.load.image(\"typeRecorder\", \"res/type-recorder-min.png\");\n    const filename =  !this.game.sawEnd ? \"res/secondLevel.json\" : \"res/secondLevelFinish.json\";\n    this.game.load.tilemap('Map2', filename, null, Phaser.Tilemap.TILED_JSON);\n  }\n\n  displayTextTypeRecorder() {\n    this.text.blink();\n    if(this.enterButton.isDown) {\n      this.game.goToTypeRecordScreen();\n    }\n  }\n\n  /*render() {\n    this.game.debug.body(this.ladder);\n    this.game.debug.text(this.game.time.fps, 2, 14, \"#00ff00\");\n  }*/\n}\n\nexport default LeftView;\n",
    "import { OnLeftOfLayer } from \"../ConstantsHeroPosition.js\";\n\nclass MainMenu extends Phaser.State {\n\n  create() {\n    this.game.add.sprite(50,100, \"LD\");\n    this.game.add.text(100, 230, \"Press enter to start\", { font: \"bold 34px Arial\", fill: \"#fff\" });\n    this.game.add.text(160, 350, \"Thanks for playing ! :)\", { font: \"bold 19px Arial\", fill: \"#fff\" })\n    this.game.add.text(10, 400, \"Compo during LD36(a week later ok!) in August 2016\", { font: \"bold 19px Arial\", fill: \"#fff\" });\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n  }\n\n  preload() {\n    this.game.load.image(\"LD\", \"res/LD.png\");\n  }\n\n  update() {\n    if(this.enterButton.isDown) {\n      this.game.goToMainGame(OnLeftOfLayer);\n    }\n  }\n\n}\n\nexport default MainMenu;\n",
    "import { StringDialog, TextPosition, FloorY, ComputerPosition, HeightComputer, WidthSpriteSheetHero, HeightSpriteSheetHero } from '../Constants.js';\nimport { OnRightOfLayer, OnLeftOfLayer } from '../ConstantsHeroPosition.js';\nimport Character from 'objects/Character';\nimport InformationString from 'objects/InformationString';\nimport { loadColissionMap, collideLadder } from \"../platformerUtils.js\";\n\nclass MainView extends Phaser.State {\n\n  constructor() {\n    super();\n    this.originalPosition = { x:0, y:0 };\n  }\n\n  init(coord) {\n    if(coord) {\n      this.originalPosition.x = coord.x;\n      this.originalPosition.y = coord.y;\n    } else {\n      this.originalPosition.x = 20;\n      this.originalPosition.y = FloorY;\n    }\n  }\n  create() {\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // Add the physics engine to all game objects\n    this.game.world.enableBody = true;\n\n    this.map = this.game.add.tilemap('Map1');\n    this.map.addTilesetImage('myTileset', 'Tileset');\n    loadColissionMap(this.map);\n\n    this.layer = this.map.createLayer('Tile Layer 1');\n    this.layer.resizeWorld();\n\n    this.ladder = this.game.add.sprite(224,221, \"Ladder\");\n    this.ladder.body.immovable = true;\n\n    this.computer = this.game.add.sprite(ComputerPosition.x, ComputerPosition.y - HeightComputer, \"computer\");\n\n    this.hero = new Character(this.game, this.originalPosition.x , this.originalPosition.y, \"test\", 0);\n    this.game.add.existing(this.hero);\n    this.game.camera.follow(this.hero);\n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n\n    this.text = new InformationString(this.game, ComputerPosition.x, StringDialog.onComputer);\n    this.game.add.existing(this.text);\n\n    this.game.time.advancedTiming = true;\n  }\n\n\n  update() {\n    this.game.physics.arcade.collide(this.hero, this.layer);\n    this.game.physics.arcade.overlap(this.hero, this.computer, this.writePressEnter, null, this);\n    if(this.hero.x < 0) {\n      this.game.goToSecondLevel(OnRightOfLayer);\n    }\n    if(this.hero.x + this.hero.width > this.game.world.width) {\n      this.game.goToThirdLevel(OnLeftOfLayer)\n    }\n    collideLadder(this.game, this.hero, this.ladder);\n  }\n\n  preload() {\n    this.game.load.spritesheet(\"test\", \"res/hero.png\", WidthSpriteSheetHero, HeightSpriteSheetHero);\n    this.game.load.image('Tileset', \"res/tileset.png\");\n    this.game.load.image(\"computer\", \"res/computer.png\");\n    this.game.load.image('Ladder', \"res/ladder.png\");\n    this.game.load.tilemap('Map1', \"res/firstLevel.json\", null, Phaser.Tilemap.TILED_JSON);\n  }\n\n  writePressEnter() {\n    this.text.blink();\n    if(this.enterButton.isDown) {\n      if(!this.game.hasVHS) {\n        this.game.goToScreenMode();\n      } else {\n        this.game.goToVHSScreen();\n      }\n    }\n  }\n\n   //render() {\n     //this.game.debug.spriteInfo(this.hero, 32, 400);\n     //this.game.debug.text(this.game.time.fps, 2, 14, \"#00ff00\");\n   //}\n\n}\n\nexport default MainView;\n",
    "import { TextPosition, StringDialog, FloorY, HeightTypeRecorder, DoorPosition, Width, DoorTextOffset, WidthSpriteSheetHero, HeightSpriteSheetHero } from '../Constants.js';\nimport { OnLeftOfLayer, OnRightOfLayer } from '../ConstantsHeroPosition.js';\nimport Character from 'objects/Character';\nimport InformationString from 'objects/InformationString.js';\nimport CodeUI from \"objects/CodeUI.js\";\nimport { loadColissionMap, collideLadder } from \"../platformerUtils.js\";\n\nconst OffsetPwdUi = 100;\n\nclass RightView extends Phaser.State {\n\n constructor() {\n    super();\n    this.originalPosition = Object.assign( {}, OnLeftOfLayer);\n  }\n\n  init(params = null) {\n    if(params) {\n      this.originalPosition.x = params.x;\n      this.originalPosition.y = params.y;\n    } else {\n      this.originalPosition = Object.assign( {}, OnLeftOfLayer);\n    }\n  }\n\n  create() {\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // Add the physics engine to all game objects\n    this.game.world.enableBody = true;\n\n    this.map = this.game.add.tilemap('Map3');\n    this.map.addTilesetImage('myTileset', 'Tileset');\n    loadColissionMap(this.map);\n\n    this.layer = this.map.createLayer('Tile Layer 1');\n    this.layer.resizeWorld();\n\n\n    if(!this.game.doorOpened) {\n      this.door = this.game.add.sprite(DoorPosition.x, DoorPosition.y, \"Door\");\n      this.door.body.immovable = true;\n    }\n\n    this.ladder = this.game.add.sprite(32,221, \"Ladder\");\n    this.ladder.body.immovable = true;\n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n\n    this.text = new InformationString(this.game, DoorPosition.x - DoorTextOffset, StringDialog.typePassword);\n    this.game.add.existing(this.text);\n\n\n    const fn = () => {\n      this.door.kill();\n      this.game.doorOpened = true;\n    };\n\n    this.passwordUI = new CodeUI(this.game, DoorPosition.x - OffsetPwdUi, fn);\n    this.game.add.existing(this.passwordUI);\n\n    this.hero = new Character(this.game, this.originalPosition.x , this.originalPosition.y, \"test\", 0);\n    this.game.add.existing(this.hero);\n    this.game.camera.follow(this.hero);\n\n    this.game.time.advancedTiming = true;\n  }\n\n\n  update() {\n    if(this.hero.x < 0 ) {\n      this.game.goToMainGame(OnRightOfLayer);\n    }\n    if(this.hero.x + this.hero.width > this.game.world.width) {\n      this.game.goToFourthScreen(OnLeftOfLayer);\n    }\n    this.game.physics.arcade.collide(this.hero, this.layer);\n    this.game.physics.arcade.collide(this.hero, this.door, this.displayTextPassword, null, this);\n    collideLadder(this.game, this.hero, this.ladder);\n    if(this.hero.isDeath()) {\n      const position = this.originalPosition.x < (Width/2) ? OnLeftOfLayer : OnRightOfLayer;\n      this.game.goToThirdLevel(position);\n    }\n  }\n\n  preload() {\n    this.game.load.spritesheet(\"test\", \"res/hero.png\", WidthSpriteSheetHero, HeightSpriteSheetHero);\n    this.game.load.image('Tileset', \"res/tileset.png\");\n    this.game.load.image('Door',\"res/door.png\");\n    this.game.load.image('Ladder', \"res/ladder.png\");\n    this.game.load.tilemap('Map3', \"res/rightLevel.json\", null, Phaser.Tilemap.TILED_JSON);\n  }\n\n  displayTextPassword() {\n    this.text.blink();\n    this.passwordUI.showText();\n  }\n\n  /*render() {\n    this.game.debug.body(this.ladder);\n    this.game.debug.text(this.game.time.fps, 2, 14, \"#00ff00\");\n  }*/\n}\n\nexport default RightView;\n",
    "import { Code, Style, StyleRef, StringDialog, TextPosition, TypeRecorderPosition } from '../Constants.js';\nimport { TypeRecorderPositionAfter } from '../ConstantsHeroPosition.js';\n\nconst yPosition = 370;\n\nconst leftPosition = {\n  x: 203,\n  y: yPosition\n};\n\nconst rightPosition = {\n  x: 296,\n  y: yPosition\n};\n\nconst ElapsedTime = 2000;\nconst Angle = 720;\n\nconst  SolutionPosition = {\n  x : 230,\n  y : 460\n};\n\nconst  RefPosition = {\n  x : 150,\n  y : 305\n};\n\nclass TypeRecordScreen extends Phaser.State {\n\n  create() {\n    let typeRecorder = this.game.add.sprite(0, 0, \"typeRecorder\");\n    const x = (this.game.camera.x + this.game.camera.width) / 2 -  typeRecorder.width / 2;\n    const y =  (this.game.camera.y + this.game.camera.height) / 2 -  typeRecorder.height / 2;\n    typeRecorder.x = x;\n    typeRecorder.y = y;\n    const scaleRotator = 0.2;\n    this.rotatorLeft = this.game.add.sprite(leftPosition.x, leftPosition.y, \"rotator\");\n    this.rotatorLeft.scale.setTo(scaleRotator, scaleRotator);\n    this.rotatorLeft.anchor.setTo(0.5, 0.5);\n    this.rotatorRight = this.game.add.sprite(rightPosition.x, rightPosition.y, \"rotator\");\n    this.rotatorRight.anchor.setTo(0.5, 0.5);\n    this.rotatorRight.scale.setTo(scaleRotator, scaleRotator);\n\n    const button = this.game.add.button(210, 70, 'buttonPlay', this.play, this, 2, 1, 0);\n    const buttonRewind = this.game.add.button(210, 108, 'buttonRewind', this.rewind, this, 2, 1, 0);\n\n    this.enterButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ENTER);\n    this.escapeButton = this.game.input.keyboard.addKey(Phaser.Keyboard.ESC);\n\n    this.text = this.game.add.text(180, 20, StringDialog.typeRecordDialog, Style);\n    this.text.visible = false;\n\n    this.direction = 1;\n    this.game.add.text(RefPosition.x, RefPosition.y, \"RF1D93WH6793E\", StyleRef);\n    this.solution = this.game.add.text(SolutionPosition.x, SolutionPosition.y, \"\", Style);\n  }\n\n  preload() {\n    this.game.load.image(\"typeRecorder\", \"res/type-recorder.png\");\n    this.game.load.image(\"rotator\", \"res/rotator.png\");\n    this.game.load.spritesheet('buttonPlay', 'res/buttonPlayTypeRecorder.png', 33, 33);\n    this.game.load.spritesheet('buttonRewind', 'res/buttonRewindTypeRecorder.png', 33, 33);\n  }\n\n  update() {\n    if(this.solution.text.length === Code.length && this.enterButton.isDown) {\n      this.game.goToSecondLevel(TypeRecorderPositionAfter);\n    }\n    if(this.escapeButton.isDown) {\n      this.game.goToSecondLevel(TypeRecorderPositionAfter);\n    }\n  }\n\n  showCode() {\n    if(this.solution.text.length >= Code.length) {\n      return;\n    }\n\n    const partialCode = Code.split(\"\",this.solution.text.length + 1);\n    this.solution.text = partialCode.join(\"\");\n\n    if(this.solution.text.length == Code.length) {\n      this.text.visible = true;\n    }\n  }\n\n  play() {\n    if(this.direction === 1) {\n      const tween = this.game.add.tween(this.rotatorLeft).to( { angle: Angle }, ElapsedTime, Phaser.Easing.Linear.None, true, false);\n      const tween2 = this.game.add.tween(this.rotatorRight).to( { angle: Angle }, ElapsedTime, Phaser.Easing.Linear.None, true);\n      tween.onComplete.add(this.completedPlay, this);\n      tween2.onComplete.add(this.completedPlay, this);\n    }\n  }\n\n  rewind() {\n    if(this.direction === -1) {\n      const tween = this.game.add.tween(this.rotatorLeft).to( { angle: -Angle }, ElapsedTime, Phaser.Easing.Linear.None, true);\n      const tween2 = this.game.add.tween(this.rotatorRight).to( { angle: -Angle }, ElapsedTime, Phaser.Easing.Linear.None, true);\n      tween.onComplete.add(this.completedRewind, this);\n      tween2.onComplete.add(this.completedRewind, this);\n      this.showCode();\n    }\n  }\n\n  completedRewind() {\n    this.direction = 1;\n  }\n\n  completedPlay() {\n    this.direction = -1;\n  }\n\n}\n\nexport default TypeRecordScreen;\n",
    "import { TextPosition, StringDialog, FloorY, VhsPosition, VhsTextOffset, WidthSpriteSheetHero, HeightSpriteSheetHero } from '../Constants.js';\nimport { OnLeftOfLayer, OnRightOfLayer, OnRightOfLayerVhsView } from '../ConstantsHeroPosition.js';\nimport Character from 'objects/Character';\nimport InformationString from 'objects/InformationString.js';\nimport { loadColissionMap, collideLadder } from \"../platformerUtils.js\";\n\nclass VhsView extends Phaser.State {\n\n constructor() {\n    super();\n    this.originalPosition = Object.assign( {}, OnLeftOfLayer);\n  }\n\n  init(params = null) {\n    if(params) {\n      this.originalPosition.x = params.x;\n      this.originalPosition.y = params.y;\n    } else {\n      this.originalPosition = Object.assign( {}, OnLeftOfLayer);\n    }\n  }\n\n  create() {\n    this.game.physics.startSystem(Phaser.Physics.ARCADE);\n    // Add the physics engine to all game objects\n    this.game.world.enableBody = true;\n\n    this.map = this.game.add.tilemap('Map4');\n    this.map.addTilesetImage('myTileset', 'Tileset');\n    loadColissionMap(this.map);\n\n    this.layer = this.map.createLayer('Tile Layer 1');\n    this.layer.resizeWorld();\n\n    this.ladder = this.game.add.sprite(64,189, \"Ladder\");\n    this.ladder.body.immovable = true;\n\n    if(!this.game.hasVHS) {\n      this.vhs = this.game.add.sprite(VhsPosition.x, VhsPosition.y, \"Vhs\");\n    }\n\n    this.text = new InformationString(this.game, VhsPosition.x - VhsTextOffset, StringDialog.vhsPicked, 3000);\n    this.game.add.existing(this.text);\n\n    this.hero = new Character(this.game, this.originalPosition.x , this.originalPosition.y, \"test\", 0);\n    this.game.add.existing(this.hero);\n    this.game.camera.follow(this.hero);\n\n    this.game.time.advancedTiming = true;\n  }\n\n\n  update() {\n    if(this.hero.x < 0 ) {\n      this.game.goToThirdLevel(OnRightOfLayer);\n    }\n    this.game.physics.arcade.collide(this.hero, this.layer);\n    if(!this.hasVHS) {\n      this.game.physics.arcade.overlap(this.hero, this.vhs, this.pickVhs, null, this);\n    }\n\n    collideLadder(this.game, this.hero, this.ladder);\n    if(this.hero.isDeath()) {\n      const position = !this.game.hasVHS ? OnLeftOfLayer : OnRightOfLayerVhsView;\n      this.game.goToFourthScreen(position);\n    }\n  }\n\n  preload() {\n    this.game.load.spritesheet(\"test\", \"res/hero.png\",WidthSpriteSheetHero, HeightSpriteSheetHero);\n    this.game.load.image('Tileset', \"res/tileset.png\");\n    this.game.load.image('Vhs',\"res/vhs.png\");\n    this.game.load.image('Ladder',\"res/ladder.png\");\n    this.game.load.tilemap('Map4', \"res/ThirdLevel.json\", null, Phaser.Tilemap.TILED_JSON);\n  }\n\n  pickVhs() {\n    this.text.blink();\n    this.vhs.kill();\n    this.game.hasVHS = true;\n  }\n\n  /*render() {\n    this.game.debug.body(this.ladder);\n    this.game.debug.text(this.game.time.fps, 2, 14, \"#00ff00\");\n  }*/\n}\n\nexport default VhsView;\n"
  ]
}